# TOAST config
# Generated with version 21ae3af2

[operators.sim_ground]
    class = "toast.ops.sim_ground.SimGround"
    enabled = true # If True, this class instance is marked as enabled
    hwp_angle = "hwp_angle" # Observation shared key for HWP angle
    hwp_rpm = 120 # The rate (in RPM) of the HWP rotation
    median_weather = true # Use median weather parameters instead of sampling from the distributions
    session_split_key = "tube_slot" # Focalplane key for splitting into observations

[operators.default_model]
    class = "toast.ops.noise_model.DefaultNoiseModel"
    enabled = false # If True, this class instance is marked as enabled

[operators.variable_model]
    class = "toast.ops.variable_noise_model.VariableNoiseModel"
    noise_model = "noise_model" # The observation key for storing the noise model
    save = true # Save the noise model to disk

[operators.elevation_model]
    class = "toast.ops.elevation_noise.ElevationNoise"
    enabled = false # If True, this class instance is marked as enabled

[operators.det_pointing_azel]
    class = "toast.ops.pointing_detector.pointing_detector.PointingDetectorSimple"
    shared_flags = "None" # Observation shared key for telescope flags to use

[operators.det_pointing_radec]
    class = "toast.ops.pointing_detector.pointing_detector.PointingDetectorSimple"
    shared_flags = "None" # Observation shared key for telescope flags to use

[operators.pixels_healpix_radec]
    class = "toast.ops.pixels_healpix.pixels_healpix.PixelsHealpix"
    nside = 512 # The NSIDE resolution

[operators.sim_atmosphere_coarse]
    class = "toast.ops.sim_tod_atm.SimAtmosphere"
    cache_dir = "atm_cache_coarse" # Directory to use for loading / saving atmosphere realizations
    det_data = "atm" # Observation detdata key for accumulating atmosphere timestreams
    field_of_view = "Quantity('40 deg')" # Override the focalplane field of view
    sample_rate = "Quantity('10 Hz')" # Rate at which to sample atmospheric TOD before interpolation.  Default is no interpolation.
    shared_flags = "None" # Observation shared key for telescope flags to use

[operators.sim_atmosphere]
    class = "toast.ops.sim_tod_atm.SimAtmosphere"
    cache_dir = "atm_cache" # Directory to use for loading / saving atmosphere realizations
    det_data = "atm" # Observation detdata key for accumulating atmosphere timestreams
    field_of_view = "Quantity('40 deg')" # Override the focalplane field of view
    sample_rate = "Quantity('10 Hz')" # Rate at which to sample atmospheric TOD before interpolation.  Default is no interpolation.
    shared_flags = "None" # Observation shared key for telescope flags to use

[operators.scan_map]
    class = "toast.ops.scan_healpix.ScanHealpixMap"
    enabled = true # If True, this class instance is marked as enabled
    file = "/lustre/fswork/projects/rech/nih/usl22vm/repos/pairdiff-scripts/ffp10_lensed_scl_100_nside0512.fits" # Path to healpix FITS file.  Use ';' if providing multiple files

[operators.sim_noise]
    class = "toast.ops.sim_tod_noise.SimNoise"
    det_data = "noise" # Observation detdata key for accumulating noise timestreams
    enabled = true # If True, this class instance is marked as enabled

[operators.gainscrambler]
    class = "toast.ops.gainscrambler.GainScrambler"
    API = 0 # Internal interface version for this operator
    component = 0 # Component index for this simulation
    constant = false # If True, scramble all detector pairs in the same way
    det_data_names = "['atm','noise']" # Observation detdata key(s) to apply the gain error to
    distribution = 0 # Gain distribution density
    enabled = false # If True, this class instance is marked as enabled
    kernel_implementation = 0 # Which kernel implementation to use (DEFAULT, COMPILED, NUMPY, JAX).
    location = 1.0 # Distribution location parameter
    name = "gainscrambler" # The 'name' of this class instance
    pattern = ".*" # Regex pattern to match against detector names
    process_pairs = true # Process detectors in pairs
    realization = 0 # Realization index
    scale = 0.01 # Distribution scale parameter
    store = false # Store the scrambled values

[operators.diff_noise_cut_flag]
    class = "toast.ops.noise_model.FlagNoiseFit"
    enabled = false # If True, this class instance is marked as enabled

[operators.noise_cut_fit]
    class = "toast.ops.noise_model.FitNoiseModel"
    enabled = false # If True, this class instance is marked as enabled

[operators.noise_cut_flag]
    class = "toast.ops.noise_model.FlagNoiseFit"
    enabled = false # If True, this class instance is marked as enabled

[operators.noise_estim_fit]
    class = "toast.ops.noise_model.FitNoiseModel"
    enabled = false # If True, this class instance is marked as enabled
    noise_model = "noise_estim" # The observation key containing the input noise model

[operators.demod_noise_estim_fit]
    class = "toast.ops.noise_model.FitNoiseModel"
    enabled = false # If True, this class instance is marked as enabled

[operators.binner]
    class = "toast.ops.mapmaker_binning.BinMap"
    enabled = false # If True, this class instance is marked as enabled

[operators.mapmaker]
    class = "toast.ops.mapmaker.MapMaker"
    enabled = false # If True, this class instance is marked as enabled

[operators.mappraiser]
    class = "mappraiser.toast_op.operator.MapMaker"
    bin_psd = true # Bin the noise PSD for fitting
    downscale = 300 # Downscale the noise by sqrt of this factor
    enabled = true # If True, this class instance is marked as enabled
    fill_gaps = false # Perform gap filling on the data
    lagmax = 4096 # Maximum lag of the correlation function
    maxiter = 2000 # Maximum number of iterations allowed for the solver
    mem_report = true # Print memory reports
    nside = 512 # HEALPix nside parameter for the output maps
    rcond_threshold = 0.001 # Pixels with rcond below this are cut
    tol = 1e-8 # Convergence threshold for the iterative solver

[templates.fourier2d]
    class = "toast.templates.fourier2d.Fourier2D"
    enabled = false # If True, this class instance is marked as enabled
